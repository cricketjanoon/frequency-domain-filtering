clear;
clc;

% input signal
x = [6;5;4;1];


% *******************************************************************************************
% Computing DFT
% *******************************************************************************************

% NAIVE IMPLEMENTATION
% f_0 = [exp(-1i*2*pi*0*0/4); exp(-1i*2*pi*0*1/4); exp(-1i*2*pi*0*2/4); exp(-1i*2*pi*0*3/4);];
% f_1 = [exp(-1i*2*pi*1*0/4); exp(-1i*2*pi*1*1/4); exp(-1i*2*pi*1*2/4); exp(-1i*2*pi*1*3/4);];
% f_2 = [exp(-1i*2*pi*2*0/4); exp(-1i*2*pi*2*1/4); exp(-1i*2*pi*2*2/4); exp(-1i*2*pi*2*3/4);];
% f_3 = [exp(-1i*2*pi*3*0/4); exp(-1i*2*pi*3*1/4); exp(-1i*2*pi*3*2/4); exp(-1i*2*pi*3*3/4);];
% f = [f_0, f_1, f_2, f_3];
% 
% X_f = zeros(4, 1);
% for i=1:4
%     X_f(i, 1) = (1/sqrt(4))*dot(x, f(:, i));
% end 

% FAST IMPLEMENTATION
f = exp((-2*pi*1i/4)*(0:3)'*(0:3));
X_f = (1/sqrt(4)) * f * x;

disp("DFT");
disp(X_f);


% *******************************************************************************************
% Computing DFT
% *******************************************************************************************

% t_0 = [exp(1i*2*pi*0*0/4); exp(1i*2*pi*1*0/4); exp(1i*2*pi*2*0/4); exp(1i*2*pi*3*0/4);];
% t_1 = [exp(1i*2*pi*0*1/4); exp(1i*2*pi*1*1/4); exp(1i*2*pi*2*1/4); exp(1i*2*pi*3*1/4);];
% t_2 = [exp(1i*2*pi*0*2/4); exp(1i*2*pi*1*2/4); exp(1i*2*pi*2*2/4); exp(1i*2*pi*3*2/4);];
% t_3 = [exp(1i*2*pi*0*3/4); exp(1i*2*pi*1*3/4); exp(1i*2*pi*2*3/4); exp(1i*2*pi*3*3/4);];
% t = [t_0, t_1, t_2, t_3];
% 
% X = zeros(4, 1);
% for i=1:4
%     X(i, 1) = (1/sqrt(4)) * dot(X_f, t(:, i)');
% end

t = exp((2*pi*1i/4)*(0:3)'*(0:3));
X = (1/sqrt(4)) * t * X_f;

disp("Original X after IDFT");
disp(abs(X));